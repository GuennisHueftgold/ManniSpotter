language: android
env:
  global:
    - ANDROID_BUILD_TOOLS=27.0.3
    - ADB_INSTALL_TIMEOUT=10
  matrix:
    - ANDROID_TARGET=android-21 ANDROID_ABI=armeabi-v7a ANDROID_VERSION=21
    #- ANDROID_TARGET=android-24 ANDROID_ABI=arm64-v8a ANDROID_VERSION=24
    - ANDROID_TARGET=android-25 ANDROID_ABI=arm64-v8a ANDROID_VERSION=25

jdk:
  - oraclejdk8
  
android:
  #update_sdk: true
  components:
    - platform-tools
    - tools
    # The BuildTools version used by your project
    - build-tools-$ANDROID_BUILD_TOOLS

    # The SDK version used to compile your project
    - $ANDROID_TARGET

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - addon-google_apis-google-27

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-$ANDROID_ABI-google_apis-$ANDROID_VERSION
    - add-on
    - extra
  licenses:
    - android-sdk-license-.+
    - '.+'
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache
before_install:
  #- $ANDROID_HOME/tools/bin/sdkmanager "build-tools;27.0.3" "platforms;android-27"
  #- yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses
  - mkdir "$ANDROID_HOME/licenses" || true;
  - echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license";
  - echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > "$ANDROID_HOME/licenses/android-sdk-license";
  - echo "84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license";
#  - yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses
  - cp ./mobile/example.secrets ./mobile/debug.secrets
  - cp ./mobile/example.secrets ./mobile/release.secrets
  - chmod +x gradlew
  - export QEMU_AUDIO_DRV=none
after_install:
  - ./gradlew dependencies || true
script:
  - ./gradlew build test combineAllCoverageReports
after_success:
  - bash <(curl -s https://codecov.io/bash) -f "mobile/build/reports/jacoco/testGmapsPlayServicesDebugUnitTestCoverage/testGmapsPlayServicesDebugUnitTestCoverage.xml" -F "GmapsPlayServicesDebug" -n "GmapsPlayServicesDebug"
  - bash <(curl -s https://codecov.io/bash) -f "mobile/build/reports/jacoco/testGmapsPlayServicesReleaseUnitTestCoverage/testGmapsPlayServicesReleaseUnitTestCoverage.xml" -F "GmapsPlayServicesRelease" -n "GmapsPlayServicesRelease"
  - bash <(curl -s https://codecov.io/bash) -f "mobile/build/reports/jacoco/testOsmNoPlayServicesDebugUnitTestCoverage/testOsmNoPlayServicesDebugUnitTestCoverage.xml" -F "OsmNoPlayServicesDebug" -n "OsmNoPlayServicesDebug"
  - bash <(curl -s https://codecov.io/bash) -f "mobile/build/reports/jacoco/testOsmNoPlayServicesReleaseUnitTestCoverage/testOsmNoPlayServicesReleaseUnitTestCoverage.xml" -F "OsmNoPlayServicesRelease" -n "OsmNoPlayServicesRelease"
  - bash <(curl -s https://codecov.io/bash) -f "mobile/build/reports/jacoco/testOsmPlayServicesDebugUnitTestCoverage/testOsmPlayServicesDebugUnitTestCoverage.xml" -F "OsmPlayServicesDebug" -n "OsmPlayServicesDebug"
  - bash <(curl -s https://codecov.io/bash) -f "mobile/build/reports/jacoco/testOsmPlayServicesReleaseUnitTestCoverage/testOsmPlayServicesReleaseUnitTestCoverage.xml" -F "OsmPlayServicesRelease" -n "OsmPlayServicesRelease"
after_failure:
  - "cat $TRAVIS_BUILD_DIR/app/build/outputs/lint-results-debug.xml"
